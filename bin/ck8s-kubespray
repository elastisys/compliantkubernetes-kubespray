#!/bin/bash

# This is the main entrypoint to Compliant Kubernetes.

set -e -o pipefail

here="$(dirname "$(readlink -f "$0")")"


usage() {
    echo "COMMANDS:" 1>&2
    echo "  init                                        initialize the config path" 1>&2
    echo "      args: <prefix> <flavor> [<SOPS fingerprint>]" 1>&2
    echo "  apply                                       runs kubespray to create the cluster" 1>&2
    echo "      args: <prefix> [<options>]" 1>&2
    echo "  run-playbook                                runs any ansible playbook in kubespray" 1>&2
    echo "      args: <prefix> <playbook> [<options>]" 1>&2
    echo "  apply-ssh                                   applies SSH keys from a file to a cluster" 1>&2
    echo "      args: <prefix> [<options>]" 1>&2
    echo "  reboot-nodes                                reboots all nodes in a cluster if needed" 1>&2
    echo "      args: <prefix> [--extra-vars manual_prompt=true] [<options>]" 1>&2
    exit 1
}

if [ $# -lt 2 ]; then
    usage
else
    export prefix="${2}"
fi

# shellcheck source=bin/common.bash
source "${here}/common.bash"

case "${1}" in
    init)
        if [ $# -lt 3 ] || [ $# -gt 4 ]; then
            usage
        fi
        shift 2
        "${here}/init.bash" "${@}"
        ;;
    apply)
        if [ $# -lt 2 ]; then
            usage
        fi
        shift 2
        "${here}/apply.bash" "${@}"
        ;;
    run-playbook)
        if [ $# -lt 3 ]; then
            usage
        fi
        shift 2
        "${here}/run-playbook.bash" "${@}"
        ;;
    apply-ssh)
        if [ $# -lt 2 ]; then
            usage
        fi
        shift 2
        "${here}/apply-ssh.bash" "${@}"
        ;;
    reboot-nodes)
        if [ $# -lt 2 ]; then
            usage
        fi
        shift 2
        "${here}/reboot-nodes.bash" "${@}"
        ;;
    *) usage ;;
esac
